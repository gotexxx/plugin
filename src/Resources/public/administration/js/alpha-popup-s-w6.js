!function(){var e={209:function(){},141:function(){},225:function(){},919:function(){},729:function(){},105:function(){},19:function(){},849:function(){},171:function(){},496:function(){},927:function(){Shopware.Component.override("sw-cms-list",{inject:["cmsPageTypeService"],methods:{createdComponent(){this.cmsPageTypeService.getTypeNames().includes("alpha_popup")||(this.cmsPageTypeService.register({name:"alpha_popup",icon:"regular-gift",title:"alpha-popup.detail.main.general.cms.pageTypePopupLabel"}),this.$super("createdComponent"))}}})},2:function(e,t,a){var o=a(209);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),(0,a(534).A)("022dc48a",o,!0,{})},838:function(e,t,a){var o=a(141);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),(0,a(534).A)("bba5c15c",o,!0,{})},18:function(e,t,a){var o=a(225);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),(0,a(534).A)("02bd4a6e",o,!0,{})},796:function(e,t,a){var o=a(919);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),(0,a(534).A)("5f319ffa",o,!0,{})},430:function(e,t,a){var o=a(729);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),(0,a(534).A)("f50e5410",o,!0,{})},862:function(e,t,a){var o=a(105);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),(0,a(534).A)("63746b70",o,!0,{})},896:function(e,t,a){var o=a(19);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),(0,a(534).A)("d75c952a",o,!0,{})},338:function(e,t,a){var o=a(849);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),(0,a(534).A)("18c27ad4",o,!0,{})},66:function(e,t,a){var o=a(171);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),(0,a(534).A)("848ca9fe",o,!0,{})},17:function(e,t,a){var o=a(496);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),(0,a(534).A)("5aac2695",o,!0,{})},534:function(e,t,a){"use strict";function o(e,t){for(var a=[],o={},n=0;n<t.length;n++){var l=t[n],p=l[0],i={id:e+":"+n,css:l[1],media:l[2],sourceMap:l[3]};o[p]?o[p].parts.push(i):a.push(o[p]={id:p,parts:[i]})}return a}a.d(t,{A:function(){return g}});var n,l="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!l)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var p={},i=l&&(document.head||document.getElementsByTagName("head")[0]),s=null,r=0,c=!1,u=function(){},d=null,h="data-vue-ssr-id",m="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function g(e,t,a,n){c=a,d=n||{};var l=o(e,t);return b(l),function(t){for(var a=[],n=0;n<l.length;n++){var i=p[l[n].id];i.refs--,a.push(i)}t?b(l=o(e,t)):l=[];for(var n=0;n<a.length;n++){var i=a[n];if(0===i.refs){for(var s=0;s<i.parts.length;s++)i.parts[s]();delete p[i.id]}}}}function b(e){for(var t=0;t<e.length;t++){var a=e[t],o=p[a.id];if(o){o.refs++;for(var n=0;n<o.parts.length;n++)o.parts[n](a.parts[n]);for(;n<a.parts.length;n++)o.parts.push(v(a.parts[n]));o.parts.length>a.parts.length&&(o.parts.length=a.parts.length)}else{for(var l=[],n=0;n<a.parts.length;n++)l.push(v(a.parts[n]));p[a.id]={id:a.id,refs:1,parts:l}}}}function _(){var e=document.createElement("style");return e.type="text/css",i.appendChild(e),e}function v(e){var t,a,o=document.querySelector("style["+h+'~="'+e.id+'"]');if(o){if(c)return u;o.parentNode.removeChild(o)}if(m){var n=r++;t=w.bind(null,o=s||(s=_()),n,!1),a=w.bind(null,o,n,!0)}else t=y.bind(null,o=_()),a=function(){o.parentNode.removeChild(o)};return t(e),function(o){o?(o.css!==e.css||o.media!==e.media||o.sourceMap!==e.sourceMap)&&t(e=o):a()}}var f=(n=[],function(e,t){return n[e]=t,n.filter(Boolean).join("\n")});function w(e,t,a,o){var n=a?"":o.css;if(e.styleSheet)e.styleSheet.cssText=f(t,n);else{var l=document.createTextNode(n),p=e.childNodes;p[t]&&e.removeChild(p[t]),p.length?e.insertBefore(l,p[t]):e.appendChild(l)}}function y(e,t){var a=t.css,o=t.media,n=t.sourceMap;if(o&&e.setAttribute("media",o),d.ssrId&&e.setAttribute(h,t.id),n&&(a+="\n/*# sourceURL="+n.sources[0]+" */",a+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"),e.styleSheet)e.styleSheet.cssText=a;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(a))}}}},t={};function a(o){var n=t[o];if(void 0!==n)return n.exports;var l=t[o]={id:o,exports:{}};return e[o](l,l.exports,a),l.exports}a.d=function(e,t){for(var o in t)a.o(t,o)&&!a.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="bundles/alphapopupsw6/",window?.__sw__?.assetPath&&(a.p=window.__sw__.assetPath+"/bundles/alphapopupsw6/"),function(){"use strict";var e=JSON.parse('{"alpha-popup":{"general":{"description":"Verwaltung von Popups","information":"Informationen","language":"Sprache","salutation":"Anrede","salesChannel":"Verkaufskanal","buttonSave":"Speichern","mainMenuItemGeneral":"Popups","placeholderSearchBarSnippets":"Durchsuche alle Popups ...","tags":"Tags","labelAddNewRule":"Neue Regel erstellen"},"list":{"textTitle":"Popups","buttonAddPopup":"Popup anlegen","buttonCancel":"Abbrechen","buttonDelete":"L\xf6schen","columnActive":"Aktiv","columnName":"Name","cmsPageLayoutName":"Layout Name","columnValidFrom":"Aktiv von","columnValidUntil":"Aktiv bis","contextMenuDelete":"L\xf6schen","contextMenuDuplicate":"Duplizieren","contextMenuEdit":"Bearbeiten","messageEmpty":"Noch keine Popups","modalTitleDelete":"Popup l\xf6schen","placeholderSearchBar":"Durchsuche alle Popups ...","textDeleteConfirm":"M\xf6chtest Du die Popup \\"{name}\\" wirklich l\xf6schen?","titleSidebarItemRefresh":"Aktualisieren"},"detail":{"header":{"titleCreate":"Neue Popup","titleEdit":"Popup","buttonCancel":"Abbrechen","buttonSave":"Speichern","titleSaveSuccess":"Erfolg","messageSaveSuccess":"Die Popup \\"{name}\\" wurde gespeichert."},"tabs":{"tabGeneral":"Allgemein","tabLocations":"Bereiche","tabConditions":"Bedingungen","tabDiscounts":"Rabatte"},"main":{"general":{"cardTitlePopupInfo":"Einstellungen","cardTitleCode":"Aktionscodes","labelTitle":"Name","placeholderName":"Gib einen Namen ein ...","labelPopupWidth":"Breite des Popups","labelPopupMaxWidth":"Maximale Breite des Popups","placeholderPopupWidth":"1200px","placeholderPopupMaxWidth":"400px e.g.","labelActive":"Aktiv","labelActiveNavigation":"Aktiv auf Navigationsseiten","labelActiveProduct":"Aktiv auf Produktseiten","labelActiveCheckout":"Aktiv auf Warenkorb- & Bestellungsseiten ","labelActiveLogin":"Aktiv auf Login Seite","labelActiveRegister":"Aktiv auf Register Seite","labelActiveConfirmCheckout":"Aktiv auf Bestellung Best\xe4tigungsseite","labelActiveFinishCheckout":"Aktiv auf Bestellabschlussseite","labelMaxRedemptionsGlobal":"Anzahl insgesamt","labelMaxRedemptionsPerCustomer":"Anzahl pro Kunde","labelPopupExclusions":"Nicht kombinieren mit","placeholderPopupExclusions":"Popup hinzuf\xfcgen ...","labelSettings":"Einstellungen","labelTrigger":"Ausl\xf6ser","labelVisualSettings":"Style","labelJsEvents":"js Events","labelElementSelector":"Element Selector","cookie":{"title":"Zeit bis zum n\xe4chsten Anzeigen","cookieExpireTime":"Zeit bis zum n\xe4chsten Anzeigen","none":"keine","oneHour":"1 Stunde","sixHours":"6 Stunden","twelveHours":"12 Stunden","oneDay":"1 Tag","twoDay":"2 Tage","oneWeek":"7 Tage","twoWeeks":"14 Tage","oneMonth":"1 Monat","indefinite":"unendlich"},"codes":{"card":"Aktionscodes","labelCode":"Allgemeiner Aktionscode","helpTextIndividual":"Ein allgemeiner Aktionscode kann nicht gleichzeitig mit individuellen Codes verwendet werden.","placeholderCode":"Gib einen Code f\xfcr die Popup ein ...","switchUseCodes":"Aktionscodes verwenden","switchUseIndividualCodes":"Individuelle Aktionscodes verwenden.","linkEditIndividualCodes":"Individuelle Aktionscodes verwalten.","individual":{"title":"Individuelle Aktionscodes","labelPattern":"Muster","helpTextPattern":"Geben Sie hier Ihr gew\xfcnschtes Code-Muster an. Benutzen Sie dabei Platzhalter wie %s f\xfcr Buchstaben oder %d f\xfcr Zahlen. Beispiel: code-%s%s%d","labelCount":"Anzahl","buttonGenerate":"Speichern und Codes generieren.","labelNoCodesExist":"Keine Codes vorhanden.","columnCode":"Aktionscode","columnRedeemed":"Eingel\xf6st","columnCustomer":"Kunde","buttonDeleteCode":"L\xf6schen","buttonOpenCustomer":"Kunde \xf6ffnen","alerts":{"errorNoPatternTitle":"Fehlendes Muster","errorNoPatternMessage":"Bitte gib ein Muster f\xfcr Deine Codes an.","successGeneratedTitle":"Code-Erstellung abgeschlossen.","successGeneratedMessage":"{count} Codes wurden generiert.","successDeletedTitle":"Code gel\xf6scht.","errorDeletedTitle":"Fehler beim L\xf6schen."}}},"cms":{"title":"Layout-Zuweisung","changeLayout":"Layout \xe4ndern","changeLayoutEmpty":"Layout zuweisen","editInPagebuilder":"Im Designer bearbeiten","editInPagebuilderEmpty":"Neues Layout erstellen","defaultTitle":"Layout fehlt","defaultDesc":"Popup wird nicht angezeigt","actionConfirm":"Layout \xfcbernehmen","placeholderSearchBar":"Layouts durchsuchen ...","actionCancel":"Abbrechen","modalTitle":"Layout ausw\xe4hlen","headline":"Popups","pageTypePopupLabel":"Popup","missingWarning":"Ohne Layout wird das Popup nicht angezeigt."}},"preconditions":{"ruleModuleLink":"Regelmodul \xf6ffnen","persona":{"card":"Zielgruppe","title":"Welche Kunden k\xf6nnen von dieser Popup profitieren?","text":"Nutze Regeln aus dem Rule Builder, um die Zielgruppe dieser Marketingaktion einzugrenzen. Ohne eine Eingrenzung haben alle Deine Kunden Zugriff auf diese Popup.","labelRules":"Kundenregeln","placeholderRules":"Regel hinzuf\xfcgen ...","switchAssignCustomers":"Popup einzelnen Kunden zuweisen","placeholderAddCustomers":"Kunden durchsuchen und hinzuf\xfcgen...","customers":{"grid":{"headerName":"Name","headerCustomerNumber":"Kundennummer","delete":"Entfernen"}}},"order":{"card":"Qualifizierte Bestellungen","title":"Definiere qualifizierte Bestellungs-Eigenschaften f\xfcr diese Popup.","text":"Nutze Regeln aus dem Rule Builder, um zu definieren, welche Eigenschaften einer Bestellung vorhanden sein m\xfcssen, um die Aktionsauflagen zu erf\xfcllen. Ohne eine Eingrenzung wird die Popup auf alle Bestellungen angewendet.","rulesModuleLink":"Regelmodul \xf6ffnen","rulesCaption":"Bestellregeln","rulesPlaceholder":"Bestellregel zuweisen ..."},"cart":{"card":"Warenk\xf6rbe","title":"Definiere qualifizierte Warenk\xf6rbe f\xfcr diese Rabatt-Popup.","text":"Nutze Regeln aus dem Rule Builder, um zu definieren, welche Eigenschaften eines Warenkorbes vorhanden sein m\xfcssen, um die Aktionsauflagen zu erf\xfcllen. Ohne eine Eingrenzung wird die Popup auf alle Warenk\xf6rbe angewendet.","rulesModuleLink":"Regelmodul \xf6ffnen","rulesCaption":"Warenkorbregeln","rulesPlaceholder":"Warenkorbregel zuweisen ...","setgroups":{"switchGroupsEnabled":"Popup auf Produkt-Sets anwenden","buttonAddGroup":"Set-Gruppe hinzuf\xfcgen","titleName":"Set-Gruppe","labelMode":"Modus","labelValue":"Wert","labelSorting":"Sortierung","labelRules":"Produktregeln","buttonDuplicate":"Duplizieren","buttonDelete":"L\xf6schen"}},"publish":{"card":"Ver\xf6ffentlichung","title":"Definiere in welchem Zeitraum das Popup angezeigt werden soll.","labelValidFrom":"Aktiv von","labelValidUntil":"Aktiv bis"}},"location":{"card":"Bereich","title":"Schr\xe4nke die Anzeige des Popups auf bestimmte Bereiche ein.","labelSalesChannels":"Verkaufskan\xe4le","placeholderSalesChannels":"Verkaufskanal hinzuf\xfcgen ...","labelCategory":"Kategorien","placeholderCategory":"Weise Kategorien zu ..."},"discounts":{"card":"Rabatt","labelValue":"Wert","labelMaxValue":"Maximaler Rabattwert","helpTextMaxValueAdvancedPrices":"Der maximale Betrag besitzt erweiterte Preise.","placeholderValue":"Gib den Wert der Popup an ...","labelScope":"Anwenden auf:","flagProductScopeLabel":"Nur auf ausgew\xe4hlte Produkte anwenden","labelRules":"Produktregeln","placeholder":"Produktregeln zuweisen ...","labelType":"Art","valueScopeCart":"Warenkorb","valueScopeDelivery":"Versandkosten","valueScopeSet":"Gesamtes Set","valueScopeSetGroup":"Set-Gruppe","valueTypeAbsolute":"Absolut","valueTypePercentage":"Prozentual","valueTypeFixed":"Festpreis","valueTypeFixedUnit":"Fester St\xfcckpreis","buttonAddDiscount":"Rabatt hinzuf\xfcgen","buttonDeleteDiscount":"Rabatt entfernen","delete":{"confirmTitle":"Rabatt entfernen","confirmText":"M\xf6chtest Du diesen Rabatt wirklich aus der Popup entfernen?","buttonCancel":"Abbrechen","buttonDelete":"Rabatt entfernen"},"labelSorting":"Sortieren nach","labelApplyCount":"Anwenden auf","labelMaxCount":"Maximale Anwendung","linkAdvancedPrices":"Erweiterte Preisansicht \xf6ffnen","pricesModal":{"advancedPricesHeader":"Erweiterte Preise","closeModal":"Schlie\xdfen","labelCurrency":"W\xe4hrung","labelPrice":"Wert"}}}}}}'),t=JSON.parse('{"alpha-popup":{"general":{"description":"Manage Popups","information":"Information","language":"Language","salutation":"Salutation","salesChannel":"Sales Channel","buttonSave":"Save","mainMenuItemGeneral":"Popups","placeholderSearchBarSnippets":"Search all Popups ...","tags":"Tags","labelAddNewRule":"Add neu Rule"},"list":{"textTitle":"Popups","buttonAddPopup":"Create Popup","buttonCancel":"Cancel","buttonDelete":"Delete","columnActive":"Active","columnName":"Name","cmsPageLayoutName":"Layout Name","columnValidFrom":"Active from","columnValidUntil":"Active until","contextMenuDelete":"Delete","contextMenuDuplicate":"Duplicate","contextMenuEdit":"Edit","messageEmpty":"No Popups","modalTitleDelete":"Delete Popup","placeholderSearchBar":"Search all Popups ...","textDeleteConfirm":"Do you really want to delete Popup \\"{name}\\"?","titleSidebarItemRefresh":"Refresh"},"detail":{"header":{"titleCreate":"New Popup","titleEdit":"Popup","buttonCancel":"Cancel","buttonSave":"Save","titleSaveSuccess":"Success","messageSaveSuccess":"Popup \\"{name}\\" saved."},"tabs":{"tabGeneral":"General","tabLocations":"Locations","tabConditions":"Conditions","tabDiscounts":"Discounts"},"main":{"general":{"cardTitlePopupInfo":"Settings","cardTitleCode":"Promo Codes","labelTitle":"Name","placeholderName":"Enter a Name...","labelPopupWidth":"Width of the Popups","labelPopupMaxWidth":"Maximum width of the Popups","placeholderPopupWidth":"1200px","placeholderPopupMaxWidth":"400px e.g.","labelActive":"Active","labelActiveNavigation":"Active on Navigation","labelActiveProduct":"Active on Product-Pages","labelActiveCheckout":"Active on Checkout- & Order-Pages ","labelActiveConfirmCheckout":"Active on Checkout-Confirm-Page","labelActiveFinishCheckout":"Active on Finish-Checkout-Page","labelActiveLogin":"Active on Login Page","labelActiveRegister":"Active on Register Page","labelMaxRedemptionsGlobal":"Redemptions total","labelMaxRedemptionsPerCustomer":"Redemptions per Customer","labelPopupExclusions":"Do not combine with","placeholderPopupExclusions":"Add Popup...","labelSettings":"Settings","labelTrigger":"Trigger","labelVisualSettings":"Style","labelJsEvents":"js Events","labelElementSelector":"Element Selector","cookie":{"title":"Time until next display","cookieExpireTime":"Time until next display","none":"none","oneHour":"1 Hour","sixHours":"6 Hours","twelveHours":"12 Hours","oneDay":"1 Day","twoDay":"2 Days","oneWeek":"7 Days","twoWeeks":"14 Days","oneMonth":"1 Month","indefinite":"indefinite"},"codes":{"card":"Promo Code","labelCode":"General Promo Code","helpTextIndividual":"A general promo code cannot be used at the same time as individual codes.","placeholderCode":"Enter a code for this Popup ...","switchUseCodes":"Use Promo Code","switchUseIndividualCodes":"Use individual Promo Codes.","linkEditIndividualCodes":"Use individual Promo Codes.","individual":{"title":"Individual Promo Codes","labelPattern":"Pattern","helpTextPattern":"Enter your desired code pattern here. Use placeholders like %s for letters or %d for numbers. Example: code-%s%s%d","labelCount":"Count","buttonGenerate":"Save and generate codes.","labelNoCodesExist":"No Codes exist.","columnCode":"Promo Codes","columnRedeemed":"Redeemed","columnCustomer":"Customer","buttonDeleteCode":"Delete","buttonOpenCustomer":"Open Customer","alerts":{"errorNoPatternTitle":"Missing pattern","errorNoPatternMessage":"Please enter a pattern for your codes","successGeneratedTitle":"Code-Generation succeeded.","successGeneratedMessage":"{count} Codes have been generated.","successDeletedTitle":"Code deleted.","errorDeletedTitle":"An error occurred while deleting"}}},"cms":{"title":"Layout-Assignment","changeLayout":"Change Layout","changeLayoutEmpty":"Assign Layout","editInPagebuilder":"Edit in Pagebuilder","editInPagebuilderEmpty":"Create new Layout","defaultTitle":"Layout missing","defaultDesc":"Popup will not be displayed","actionConfirm":"Apply Layout","placeholderSearchBar":"Search Layouts ...","actionCancel":"Cancel","modalTitle":"Select Layout","headline":"Popups","pageTypePopupLabel":"Popup","missingWarning":"Without a Layout the Popup will not be displayed."}},"preconditions":{"ruleModuleLink":"Open Rulemodule","persona":{"card":"Target group","title":"Which customers can benefit from this popup?","text":"Use rules from the Rule Builder to narrow down the audience of this marketing action. Without a restriction, all your customers will have access to this popup.","labelRules":"Customer rules","placeholderRules":"Add rule ...","switchAssignCustomers":"Assign popup to individual customers","placeholderAddCustomers":"Browse and add customers...","customers":{"grid":{"headerName":"Name","headerCustomerNumber":"Customer number","delete":"Delete"}}},"order":{"card":"Qualified orders","title":"Define qualified order properties for this popup.","text":"Use rules from the Rule Builder to define which properties of an order must be present in order to meet the promotion requirements. Without a restriction, the popup will be applied to all orders.","rulesModuleLink":"Open rule module","rulesCaption":"Order rules","rulesPlaceholder":"Add order rule ..."},"cart":{"card":"Shopping carts","title":"Define qualified Shopping carts for this discount-popup.","text":"Use rules from the Rule Builder to define which properties of a shopping cart must be present in order to meet the promotion requirements. Without a restriction, the popup will be applied to all shopping carts.","rulesModuleLink":"Open rule module","rulesCaption":"Shopping cart rules","rulesPlaceholder":"Assign shopping cart rules ...","setgroups":{"switchGroupsEnabled":"Apply popup to product-sets","buttonAddGroup":"Add set-group","titleName":"Set-groups","labelMode":"Mode","labelValue":"Value","labelSorting":"Sorting","labelRules":"Product rules","buttonDuplicate":"Duplicate","buttonDelete":"Delete"}},"publish":{"card":"Publishing","title":"Define the time period in which the popup should be displayed.","labelValidFrom":"Active from","labelValidUntil":"Active until"}},"location":{"card":"Location","title":"Restrict the display of the popup to specific locations.","labelSalesChannels":"Sales channels","placeholderSalesChannels":"Add sales channel ...","labelCategory":"Categories","placeholderCategory":"Apply to category ..."},"discounts":{"card":"Discount","labelValue":"Value","labelMaxValue":"Maximum discount value","helpTextMaxValueAdvancedPrices":"The maximum value has advanced prices","placeholderValue":"Enter popup value ...","labelScope":"Anwenden auf:","flagProductScopeLabel":"Only apply to selected products","labelRules":"Product rules","placeholder":"Apply product rule ...","labelType":"Type","valueScopeCart":"Shopping cart","valueScopeDelivery":"Shipping costs","valueScopeSet":"Whole Set","valueScopeSetGroup":"Set-groups","valueTypeAbsolute":"Absolut","valueTypePercentage":"Percentage","valueTypeFixed":"Fixed price","valueTypeFixedUnit":"Fixed unit price","buttonAddDiscount":"Add discount","buttonDeleteDiscount":"Remove discount","delete":{"confirmTitle":"Remove discount","confirmText":"Do you really want to remove this discount from this popup?","buttonCancel":"Cancel","buttonDelete":"Remove discount"},"labelSorting":"Sort by","labelApplyCount":"Apply to","labelMaxCount":"Maximum uses","linkAdvancedPrices":"Open advanced prices","pricesModal":{"advancedPricesHeader":"Advanced prices","closeModal":"Close","labelCurrency":"Currency","labelPrice":"Price"}}}}}}');a(338);let{Component:o}=Shopware;o.register("alpha-popup-rule-select",{template:'{% block alpha_popup_rule_select %}\n    <div class="alpha-popup-rule-select">\n        {% block a %}\n            <sw-entity-many-to-many-select\n                    v-bind="$attrs"\n                    ref="ruleSelect"\n                    class="alpha-popup-rule-select"\n                    :entity-collection="collection ? collection : []"\n                    :local-mode="localMode"\n                    v-on="$listeners"\n                    @update:entityCollection="onChange">\n\n                <template #before-item-list>\n                    <li class="sw-select-result sw-popup-rule-select__add-new-rule"\n                        @click="showRuleModal = true">\n                        {{ $tc(\'alpha-popup.general.labelAddNewRule\') }}\n                    </li>\n                </template>\n            </sw-entity-many-to-many-select>\n        {% endblock %}\n\n        {% block b %}\n            <sw-rule-modal\n                    v-if="showRuleModal"\n                    :allowed-rule-scopes="ruleScope"\n                    @save="onSaveRule"\n                    @modal-close="showRuleModal = false"\n            >\n            </sw-rule-modal>\n        {% endblock %}\n    </div>\n{% endblock %}\n',model:{prop:"collection",event:"collection-added-item"},inject:["repositoryFactory"],props:{collection:{type:Array,required:!1,default:null},ruleScope:{type:Array,required:!1,default:null}},data(){return{showRuleModal:!1}},methods:{onChange(e){this.$emit("update:collection",e)},onSaveRule(e){let t=this.repositoryFactory.create(this.collection.entity,this.collection.source);t.assign(e,this.collection.context).then(()=>{t.search(this.collection.criteria,this.collection.context).then(e=>{this.$emit("collection-added-item",e),this.$refs.ruleSelect.sendSearchRequest()})})}}});let{Component:n}=Shopware;n.register("alpha-popup-active-form",{template:'{% block alpha_popup_detail_restrictions_active_from %}\n    <div style="display: flex; gap: 10px; flex-wrap: wrap">\n        {% block alpha_popup_detail_restrictions_product_active_field %}\n\n            <sw-switch-field\n                    bordered\n                    :label="$tc(\'alpha-popup.detail.main.general.labelActiveNavigation\')"\n                    v-model:value="popup.navigationActive"\n                    style="max-width:500px; margin:0;"\n                    v-tooltip="{\n                                message: \'Homepage, Kategorieseite, Herstellerseite \',\n                                width: 258,\n                            }"\n            >\n            </sw-switch-field>\n        {% endblock %}\n        {% block alpha_popup_detail_restrictions_navigation_active_field %}\n            <sw-switch-field\n                    bordered\n                    :label="$tc(\'alpha-popup.detail.main.general.labelActiveProduct\')"\n                    v-model:value="popup.productActive"\n                    style="max-width:500px; margin:0;"\n            >\n            </sw-switch-field>\n        {% endblock %}\n        {% block alpha_popup_detail_restrictions_login_active_field %}\n            <sw-switch-field\n                      bordered\n                      :label="$tc(\'alpha-popup.detail.main.general.labelActiveLogin\')"\n                      v-model:value="popup.loginActive"\n                      style="max-width:500px;margin:0;"\n            >\n            </sw-switch-field>\n        {% endblock %}\n        {% block alpha_popup_detail_restrictions_register_active_field %}\n            <sw-switch-field\n                      bordered\n                      :label="$tc(\'alpha-popup.detail.main.general.labelActiveRegister\')"\n                      v-model:value="popup.registerActive"\n                      style="max-width:500px;margin:0;"\n            >\n            </sw-switch-field>\n        {% endblock %}\n        {% block alpha_popup_detail_restrictions_checkout_active_field %}\n            <sw-switch-field\n                      bordered\n                      :label="$tc(\'alpha-popup.detail.main.general.labelActiveCheckout\')"\n                      v-model:value="popup.checkoutActive"\n                      style="max-width:500px;margin:0;"\n            >\n            </sw-switch-field>\n        {% endblock %}\n        {% block alpha_popup_detail_restrictions_checkout_confirm_active_field %}\n            <sw-switch-field\n                      bordered\n                      :label="$tc(\'alpha-popup.detail.main.general.labelActiveFinishCheckout\')"\n                      v-model:value="popup.checkoutFinishActive"\n                      v-if="popup.checkoutActive"\n                      style="max-width:500px;margin:0;"\n            >\n            </sw-switch-field>\n        {% endblock %}\n        {% block alpha_popup_detail_restrictions_checkout_finish_active_field %}\n            <sw-switch-field\n                      bordered\n                      :label="$tc(\'alpha-popup.detail.main.general.labelActiveConfirmCheckout\')"\n                      v-model:value="popup.checkoutConfirmActive"\n                      v-if="popup.checkoutActive"\n                      style="max-width:500px;margin:0;"\n            >\n            </sw-switch-field>\n        {% endblock %}\n    </div>\n{% endblock %}',inject:["repositoryFactory"],props:{popup:{type:Object,required:!1,default:null}}}),a(2);let{Component:l,Mixin:p}=Shopware,{mapPropertyErrors:i}=Shopware.Component.getComponentHelper(),{Criteria:s,EntityCollection:r}=Shopware.Data;Shopware.Utils.types,l.register("alpha-popup-basic-form",{template:'{% block alpha_popup_basic_form %}\n    <div class="alpha-popup-basic-form">\n        <template v-if="popup !== null">\n            <sw-container columns="3fr 1fr" gap="0px 30px">\n                {% block alpha_popup_basic_form_title_field %}\n                    <sw-text-field\n                            :label="$tc(\'alpha-popup.detail.main.general.labelTitle\')"\n                            :placeholder="placeholder(popup, \'name\', $tc(\'alpha-popup.detail.main.general.placeholderName\'))"\n                            v-model:value="popup.name"\n                            :error="popupNameError"\n                            required\n                            validation="required">\n                    </sw-text-field>\n                {% endblock %}\n\n                {% block alpha_popup_basic_form_active_field %}\n                    <sw-switch-field\n                            bordered\n                            :label="$tc(\'alpha-popup.detail.main.general.labelActive\')"\n                            v-model:value="popup.active">\n                    </sw-switch-field>\n                {% endblock %}\n\n            </sw-container>\n\n            {% block alpha_popup_basic_form_cms_layout %}\n                <alpha-popup-cms-layout-card\n                        v-bind="{ popup, cmsPage, isLoading }">\n                </alpha-popup-cms-layout-card>\n            {% endblock %}\n            <sw-card positionIdentifier="alpha-trigger-select-card"\n                     class="alpha-trigger-select-card"\n                     :title="$tc(\'alpha-popup.detail.main.general.labelTrigger\')">\n                {% block alpha_popup_time_delay_select %}\n                    <alpha-popup-time-delay-select>\n                    </alpha-popup-time-delay-select>\n                {% endblock %}\n                {% block alpha_popup_scroll_activation %}\n                    <alpha-popup-scroll-activation>\n                    </alpha-popup-scroll-activation>\n                {% endblock %}\n                {% block alpha_popup_js_events %}\n                    <alpha-popup-js-events\n                            :popup="popup">\n                    </alpha-popup-js-events>\n                {% endblock %}\n                {% block alpha_popup_element_selector %}\n                    <alpha-popup-element-selector\n                            :popup="popup">\n                    </alpha-popup-element-selector>\n                {% endblock %}\n            </sw-card>\n            <sw-card positionIdentifier="alpha-cookie-expire-time-select-card"\n                     class="alpha-cookie-expire-time-select-card">\n            {% block alpha_popup_cookie_expire_time_select %}\n                <alpha-popup-cookie-expire-time-select>\n                </alpha-popup-cookie-expire-time-select>\n            {% endblock %}\n            </sw-card>\n            <sw-card positionIdentifier="alpha-visual-card"\n                     class="alpha-visual-card"\n                     :title="$tc(\'alpha-popup.detail.main.general.labelVisualSettings\')">\n                {% block alpha_popup_width_select %}\n                    <alpha-popup-width-select>\n                    </alpha-popup-width-select>\n                {% endblock %}\n            </sw-card>\n        </template>\n    </div>\n{% endblock %}\n\n',inject:["cmsService","repositoryFactory"],mixins:[p.getByName("placeholder")],props:{popup:{type:Object,required:!1,default:null}},data(){return{isLoading:!1}},computed:{cmsPageRepository(){return this.repositoryFactory.create("cms_page")},cmsPage(){return Shopware.State.get("cmsPageState").currentPage},cmsPageId(){return this.popup?this.popup.cmsPageId:null},...i("popup",["name","validUntil"])},watch:{popup(){this.popup&&this.loadPopups()},cmsPageId(){Shopware.State.dispatch("cmsPageState/resetCmsPageState"),this.getAssignedCmsPage()}},created(){this.createdComponent()},methods:{loadPopups(){let e=this.repositoryFactory.create("alpha_popup"),t=new s;e.search(t,Shopware.Context.api)},createdComponent(){this.popup&&(this.loadPopups(),this.popup.isNew&&this.popup.isNew()&&Shopware.State.dispatch("cmsPageState/resetCmsPageState"))},getAssignedCmsPage(){if(null===this.cmsPageId)return Promise.resolve(null);let e=new s(1,1);return e.setIds([this.cmsPageId]),e.addAssociation("previewMedia"),this.cmsPageRepository.search(e).then(e=>{let t=e.get(this.cmsPageId);return this.updateCmsPageDataMapping(),Shopware.State.commit("cmsPageState/setCurrentPage",t),this.cmsPage})},updateCmsPageDataMapping(){Shopware.State.commit("cmsPageState/setCurrentMappingEntity","popup"),Shopware.State.commit("cmsPageState/setCurrentMappingTypes",this.cmsService.getEntityMappingTypes("popup")),Shopware.State.commit("cmsPageState/setCurrentDemoEntity",this.popup)}}});let{Component:c}=Shopware,{mapPropertyErrors:u,mapState:d,mapGetters:h}=Shopware.Component.getComponentHelper();c.register("alpha-popup-publish-select",{template:'{% block alpha_popup_publish_select %}\n    <sw-card position-identifier="alpha-popup-card-publish-select" class="alpha-popup-publish-select" :title="$tc(\'alpha-popup.detail.main.preconditions.publish.card\')">\n        <h4>{{ $tc(\'alpha-popup.detail.main.preconditions.publish.title\') }}</h4>\n\n        <sw-container columns="1fr 1fr" gap="0px 30px">\n            {% block alpha_popup_publish_select_valid_from_field %}\n            <sw-datepicker date-type="datetime"\n                           :label="$tc(\'alpha-popup.detail.main.preconditions.publish.labelValidFrom\')"\n                           v-model:value="popup.validFrom">\n            </sw-datepicker>\n            {% endblock %}\n\n            {% block alpha_popup_publish_select_valid_until_field %}\n            <sw-datepicker date-type="datetime"\n                           :label="$tc(\'alpha-popup.detail.main.preconditions.publish.labelValidUntil\')"\n                           v-model:value="popup.validUntil">\n            </sw-datepicker>\n            {% endblock %}\n        </sw-container>\n    </sw-card>\n{% endblock %}\n',computed:{...d("alphaPopupDetail",["popup"]),...u("popup",["tags"])}});let{Component:m}=Shopware,{Criteria:g}=Shopware.Data,{mapPropertyErrors:b,mapState:_,mapGetters:v}=Shopware.Component.getComponentHelper();m.register("alpha-popup-sales-channel-select",{template:'{% block sw_select_selection_item_text %}\n    <sw-multi-select class="alpha-popup-sales-channel-select"\n                     v-bind="popup"\n                     :options="salesChannels"\n                     value-property="id"\n                     v-model:value="salesChannelIds">\n\n        <template #selection-label-property="{ item }">\n            {{ item.name || item.translated.name }}\n        </template>\n        <template #result-label-property="{ item }">\n            {{ item.name || item.translated.name }}\n        </template>\n    </sw-multi-select>\n{% endblock %}\n',inject:["repositoryFactory"],data(){return{salesChannels:[]}},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},popupSalesChannelRepository(){return this.popup?this.repositoryFactory.create(this.popup.salesChannels.entity,this.popup.salesChannels.source):null},salesChannelIds:{get(){return this.popup&&this.popup.salesChannels?this.popup.salesChannels.map(e=>e.salesChannelId):[]},set(e){e=e||[];let{deleted:t,added:a}=this.getChangeset(e);if(this.popup.isNew()){this.handleLocalMode(t,a);return}this.handleWithRepository(t,a)}},..._("alphaPopupDetail",["popup"]),...b("popup",["tags"])},created(){this.createdComponent()},methods:{createdComponent(){this.salesChannelRepository.search(new g,Shopware.Context.api).then(e=>{this.salesChannels=e})},getChangeset(e){let t=[],a=[];return e.forEach(e=>{this.popup.salesChannels.find(t=>t.salesChannelId===e)||a.push(e)}),this.popup.salesChannels.forEach(a=>{e.includes(a.salesChannelId)||t.push(a.salesChannelId)}),{deleted:t,added:a}},getAssociationBySalesChannelId(e){return this.popup.salesChannels.find(t=>t.salesChannelId===e)},handleLocalMode(e,t){e.forEach(e=>{let t=this.getAssociationBySalesChannelId(e);this.popup.salesChannels.remove(t.id)}),t.forEach(e=>{let t=this.popupSalesChannelRepository.create(this.popup.salesChannels.context);t.salesChannelId=e,t.popupId=this.popup.id,t.priority=1,this.popup.salesChannels.add(t)})},handleWithRepository(e,t){e.forEach(e=>{let t=this.getAssociationBySalesChannelId(e);this.popup.salesChannels.remove(t.id)}),t.forEach(e=>{let t=this.popupSalesChannelRepository.create(this.popup.salesChannels.context);t.salesChannelId=e,t.popupId=this.popup.id,t.priority=1,this.popup.salesChannels.add(t)})}}}),a(18);let{Component:f}=Shopware;f.register("alpha-popup-cms-layout-card",{template:'{% block alpha_popup_cms_layout_card %}\n    <sw-card position-identifier="alpha-popup-cms-layout-card" class="alpha-popup-cms-layout-card" :title="$tc(\'alpha-popup.detail.main.general.cms.title\')" :is-loading="isLoading">\n        <div class="alpha-popup-cms-layout-card__base-layout">\n            {% block alpha_popup_cms_layout_preview %}\n                <div class="alpha-popup-cms-layout-card__preview" @click="openLayoutModal">\n                    <sw-cms-list-item :page="cmsPage" active></sw-cms-list-item>\n                </div>\n            {% endblock %}\n\n            {% block alpha_popup_cms_layout_modal %}\n                <alpha-popup-layout-modal\n                    v-if="showLayoutSelectionModal"\n                    @modal-layout-select="onLayoutSelect"\n                    @modal-close="closeLayoutModal">\n                </alpha-popup-layout-modal>\n            {% endblock %}\n\n            {% block alpha_popup_cms_layout_desc %}\n                <div class="alpha-popup-cms-layout-card__desc">\n\n                    {% block alpha_popup_cms_layout_desc_info %}\n                        <div class="alpha-popup-cms-layout-card__desc-info">\n                            {% block alpha_popup_cms_layout_desc_info_headline %}\n                                <div class="alpha-popup-cms-layout-card__desc-headline" :class="{ \'is--empty\': !cmsPage }">\n                                    {{ cmsPage ? cmsPage.name : $tc(\'alpha-popup.detail.main.general.cms.defaultTitle\') }}\n                                </div>\n                            {% endblock %}\n\n                            {% block alpha_popup_cms_layout_desc_info_subheadline %}\n                                <div class="alpha-popup-cms-layout-card__desc-subheadline" :class="{ \'is--empty\': !cmsPage }">\n                                    {{ cmsPage ? cmsPageTypes[cmsPage.type] : $tc(\'alpha-popup.detail.main.general.cms.defaultDesc\') }}\n                                </div>\n                            {% endblock %}\n                        </div>\n                    {% endblock %}\n\n                    {% block alpha_popup_cms_layout_desc_actions %}\n                        <div class="alpha-popup-cms-layout-card__desc-actions">\n                            {% block alpha_popup_cms_layout_desc_actions_layout %}\n                                <sw-button\n                                    size="small"\n                                    @click="openLayoutModal"\n                                    class="alpha-popup-cms-layout__change-layout-action">\n                                    {{ cmsPage ? $tc(\'alpha-popup.detail.main.general.cms.changeLayout\') : $tc(\'alpha-popup.detail.main.general.cms.changeLayoutEmpty\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block alpha_popup_cms_layout_desc_actions_designer %}\n                                <sw-button size="small" @click="openInPagebuilder">\n                                    {{ cmsPage ? $tc(\'alpha-popup.detail.main.general.cms.editInPagebuilder\'): $tc(\'alpha-popup.detail.main.general.cms.editInPagebuilderEmpty\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block alpha_popup_cms_layout_desc_actions_remove %}\n                                <sw-button v-if="cmsPage" size="small" @click="onLayoutReset" square>\n                                    <sw-icon name="regular-trash" small />\n                                </sw-button>\n                            {% endblock %}\n                        </div>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n        </div>\n    </sw-card>\n{% endblock %}\n',props:{popup:{type:Object,required:!0},cmsPage:{type:Object,required:!1,default:null},isLoading:{type:Boolean,required:!1,default:!1}},data(){return{showLayoutSelectionModal:!1}},computed:{cmsPageTypes(){return{page:this.$tc("sw-cms.detail.label.pageTypeShopPage"),landingpage:this.$tc("sw-cms.detail.label.pageTypeLandingpage"),product_list:this.$tc("sw-cms.detail.label.pageTypeCategory"),product_detail:this.$tc("sw-cms.detail.label.pageTypeProduct")}}},methods:{onLayoutSelect(e){this.popup.cmsPageId=e},onLayoutReset(){this.onLayoutSelect(null)},openInPagebuilder(){let e;e=this.cmsPage?this.$router.resolve({name:"sw.cms.detail",params:{id:this.popup.cmsPageId}}):this.$router.resolve({name:"sw.cms.create"}),window.open(e.href,"_blank")},openLayoutModal(){this.showLayoutSelectionModal=!0},closeLayoutModal(){this.showLayoutSelectionModal=!1}}}),a(796);let{Component:w,Mixin:y}=Shopware,{Criteria:C}=Shopware.Data;w.register("alpha-popup-layout-modal",{template:'{% block alpha_popup_layout_modal %}\n    <sw-modal class="alpha-popup-layout-modal" @modal-close="closeModal" :title="$tc(\'alpha-popup.detail.main.general.cms.modalTitle\')">\n\n        {% block alpha_popup_layout_modal_header %}\n            <div class="alpha-popup-layout-modal__header">\n\n                {% block alpha_popup_layout_modal_header_title %}\n                    <div class="alpha-popup-layout-modal__header-title">\n                        {{\xa0$tc(\'alpha-popup.detail.main.general.cms.headline\') }}\n                    </div>\n                {% endblock %}\n\n                {% block alpha_popup_layout_modal_header_search %}\n                    <sw-simple-search-field class="alpha-popup-layout-modal__header-search"\n                        :placeholder="$tc(\'alpha-popup.detail.main.general.cms.placeholderSearchBar\')"\n                        @search-term-change="onSearch">\n                    </sw-simple-search-field>\n                {% endblock %}\n\n            </div>\n        {% endblock %}\n\n        {% block alpha_popup_layout_modal_content %}\n            <div class="alpha-popup-layout-modal__content">\n\n                {% block alpha_popup_layout_modal_loader %}\n                    <sw-loader v-if="isLoading"></sw-loader>\n                {% endblock %}\n\n                {% block alpha_popup_layout_modal_content %}\n                    <sw-container v-else columns="repeat(auto-fill, minmax(250px, 1fr))" gap="24px">\n\n                        {% block alpha_popup_layout_modal_content_listing %}\n                            <div v-for="(cmsPage, index) in pages" class="alpha-popup-layout-modal__content-item" :class="[{ \'is--selected\': cmsPage.id === selected }, \'alpha-popup-layout-modal__content-item--\' + index]">\n                                {% block alpha_popup_layout_modal_content_listing_item %}\n\n                                    {% block alpha_popup_layout_modal_content_listing_item_checkbox %}\n                                        <sw-checkbox-field @change="onSelection(cmsPage.id)" :value="cmsPage.id === selected" type="checkbox"></sw-checkbox-field>\n                                    {% endblock %}\n\n                                    {% block alpha_popup_layout_modal_content_listing_item_inner %}\n                                        <sw-cms-list-item\n                                            :page="cmsPage"\n                                            :key="cmsPage.id"\n                                            @item-click="selectItem(cmsPage.id)">\n                                        </sw-cms-list-item>\n                                    {% endblock %}\n\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </sw-container>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block alpha_popup_layout_modal_footer %}\n            <template #modal-footer>\n                <sw-button @click="closeModal">\n                    {{\xa0$tc(\'alpha-popup.detail.main.general.cms.actionCancel\') }}\n                </sw-button>\n                <sw-button @click="selectLayout" variant="primary">\n                    {{\xa0$tc(\'alpha-popup.detail.main.general.cms.actionConfirm\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n    </sw-modal>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[y.getByName("listing")],data(){return{selected:null,isLoading:!1,sortBy:"createdAt",sortDirection:"DESC",term:null,total:null,pages:[]}},computed:{pageRepository(){return this.repositoryFactory.create("cms_page")}},methods:{getList(){this.isLoading=!0;let e=new C(this.page,this.limit);return e.addFilter(C.equals("type","alpha_popup")),this.pageRepository.search(e,Shopware.Context.api).then(e=>(this.total=e.total,this.pages=e,this.isLoading=!1,this.pages)).catch(e=>{console.error(e),this.isLoading=!1})},selectLayout(){this.$emit("modal-layout-select",this.selected),this.closeModal()},selectItem(e){this.selected=e},onSearch(e){!e.length||e.length<=0?this.term=null:this.term=e,this.page=1,this.getList()},onSelection(e){this.selected=e},closeModal(){this.$emit("modal-close"),this.selected=null,this.term=null}}}),a(862);let{Criteria:k}=Shopware.Data;class S{constructor(e,t,a,o){this.component=e,this.repoCustomers=t,this.repoPopupCustomers=a,this.context=o,this.dataSource=[],this.addIds=[],this.deleteIds=[]}getColumns(){return[{property:"fullName",dataIndex:"fullName",label:this.component.$tc("alpha-popup.detail.main.preconditions.persona.customers.grid.headerName"),allowResize:!1},{property:"customerNumber",dataIndex:"customerNumber",label:this.component.$tc("alpha-popup.detail.main.preconditions.persona.customers.grid.headerCustomerNumber"),allowResize:!1}]}async reloadCustomers(){let e=new k;await this.repoPopupCustomers.search(e,this.context).then(e=>{this.dataSource=e})}getTotalCount(){return this.dataSource.length}getPageDataSource(e,t){e<1&&(e=1);let a=(e-1)*t;return this.dataSource.slice(a,a+t)}getCustomerIdsToAdd(){return this.addIds}getCustomerIdsToDelete(){return this.deleteIds}async addCustomer(e,t){await this.repoCustomers.get(e,t).then(e=>{!function(e,t){for(let a=0;a<e.length;a+=1)if(e[a].id===t)return!0;return!1}(this.dataSource,e.id)&&(this.dataSource.push(e),this.addIds.push(e.id))})}async removeCustomer(e){await this.deleteIds.push(e.id),this.dataSource=this.dataSource.filter(t=>t.id!==e.id)}}let{Component:P}=Shopware,{Criteria:A}=Shopware.Data,{mapPropertyErrors:x,mapState:D}=Shopware.Component.getComponentHelper();P.register("alpha-popup-persona-form",{template:'{% block alpha_popup_persona_form %}\n    <div class="alpha-popup-persona-form">\n        <sw-card position-identifier="alpha-persona-form"\n                 :title="$tc(\'alpha-popup.detail.main.preconditions.persona.card\')">\n            {% block alpha_popup_persona_form_rules %}\n                <div class="alpha-popup-persona-form-rules">\n                    <h4>{{ $tc(\'alpha-popup.detail.main.preconditions.persona.title\') }}</h4>\n                    <p>\n                        {{ $tc(\'alpha-popup.detail.main.preconditions.persona.text\') }}\n                    </p>\n                    {% block alpha_popup_persona_form_persona_rule_id_field %}\n                        <alpha-popup-rule-select\n                                v-if="hasPopupPersonaRulesLoaded"\n                                class="alpha-popup-persona-form__persona-rules"\n                                v-model:collection="popup.personaRules"\n                                :label="$tc(\'alpha-popup.detail.main.preconditions.persona.labelRules\')"\n                                :placeholder="$tc(\'alpha-popup.detail.main.preconditions.persona.placeholderRules\')"\n                                :criteria="ruleFilter"\n                                :rule-scope="[\'checkout\']"\n                                :disabled="isEditingDisabled">\n                        </alpha-popup-rule-select>\n                    {% endblock %}\n                    {% block alpha_popup_persona_form_persona_customers_switch %}\n                        <sw-switch-field\n                                v-if="popup"\n                                class="alpha-popup-persona-form__customers-switch"\n                                :label="$tc(\'alpha-popup.detail.main.preconditions.persona.switchAssignCustomers\')"\n                                v-model:value="popup.customerRestriction"\n                                :disabled="isEditingDisabled">\n                        </sw-switch-field>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n        </sw-card>\n\n        <sw-card position-identifier="alpha-popup-persona-form-customers-card"\n                 v-if="popup && popup.customerRestriction">\n            {% block alpha_popup_persona_form_customers %}\n                <div class="alpha-popup-persona-form-customers">\n                    {% block alpha_popup_persona_form_customer_search_field %}\n                        <sw-entity-single-select ref="selectCustomerSearch"\n                                                 class="alpha-popup-persona-form-customers__customer-search"\n                                                 :search-placeholder="$tc(\'alpha-popup.detail.main.preconditions.persona.placeholderAddCustomers\')"\n                                                 required\n                                                 entity="customer"\n                                                 :criteria="customerCriteria"\n                                                 label-property="firstName"\n                                                 @update:value="onAddCustomer"\n                                                 v-model:value="customerModel"\n                                                 :disabled="isEditingDisabled">\n                            <template #result-label-property="{ item, index, searchTerm, getKey }">\n                                <sw-highlight-text :text="`${getKey(item, \'firstName\')} ${getKey(item, \'lastName\')}`"\n                                                   :search-term="searchTerm">\n                                </sw-highlight-text>\n                            </template>\n                        </sw-entity-single-select>\n                    {% endblock %}\n                    {% block alpha_popup_persona_form_customer_grid %}\n                        <sw-data-grid ref="gridCustomers"\n                                      :data-source="gridCustomersPageDataSource"\n                                      :columns="gridCustomersColumns"\n                                      :show-selection="true"\n                                      @select-all-items="onGridSelectionChanged"\n                                      @selection-change="onGridSelectionChanged">\n                            <template #column-fullName="{ item, index }">\n                                {{ item.firstName }} {{ item.lastName }}\n                            </template>\n                            <template #actions="{ item }">\n                                {% block alpha_popup_persona_form_customer_grid_action_remove %}\n                                    <sw-context-menu-item variant="danger"\n                                                          @click="onRemoveCustomer(item)">\n                                        {{ $tc(\'alpha-popup.detail.main.preconditions.persona.customers.grid.delete\') }}\n                                    </sw-context-menu-item>\n                                {% endblock %}\n                            </template>\n                            <template #pagination>\n                                <sw-pagination :total="gridCustomersTotalCount"\n                                               :page="gridCustomersPageNr"\n                                               :limit="gridCustomersPageLimit"\n                                               :total-visible="7"\n                                               :steps="[10, 25, 50]"\n                                               @page-change="onCustomerPageChange">\n                                </sw-pagination>\n                            </template>\n                        </sw-data-grid>\n                    {% endblock %}\n                    {% block alpha_popup_persona_form_customer_grid_remove_all %}\n                        <sw-button class="alpha-popup-persona-form-customers__remove-selected-customers"\n                                   v-if="gridCustomersTotalCount > 0"\n                                   :disabled="isRemoveButtonDisabled"\n                                   @click="onRemoveSelectedCustomers"\n                                   size="small"\n                                   square>\n                            <sw-icon name="regular-trash" small/>\n                        </sw-button>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n        </sw-card>\n    </div>\n{% endblock %}\n',inject:["repositoryFactory"],data(){return{customerService:null,customerPersonaRepository:null,removeButtonDisabled:!0,gridCustomersPageDataSource:[],gridCustomersPageNr:1,gridCustomersPageLimit:10,customerModel:null}},watch:{popup(){if(!this.popup||!this.popup.personaCustomers)return[];this.createdComponent()}},computed:{...D("alphaPopupDetail",["popup"]),...x("popup",["tags"]),hasPopupPersonaRulesLoaded(){return!!this.popup&&!!this.popup.personaRules},personaRules(){return!!this.popup&&!!this.popup.personaRules&&this.popup.personaRules},ruleFilter(){let e=new A;return e.addFilter(A.multi("AND",[A.not("AND",[A.equalsAny("conditions.type",["cartCartAmount"])]),A.equalsAny("conditions.type",["customerBillingCountry","customerBillingStreet","customerBillingZipCode","customerIsNewCustomer","customerCustomerGroup","customerCustomerNumber","customerDaysSinceLastOrder","customerDifferentAddresses","customerLastName","customerOrderCount","customerShippingCountry","customerShippingStreet","customerShippingZipCode"])])),e},gridCustomersColumns(){return null===this.customerService?[]:this.customerService.getColumns()},gridCustomersTotalCount(){return null===this.customerService?0:this.customerService.getTotalCount()},gridCustomersItems(){return this.gridCustomersPageDataSource},isRemoveButtonDisabled(){return this.removeButtonDisabled},customerCriteria(){return new A},isEditingDisabled(){return!1}},created(){if(!this.popup||!this.popup.personaCustomers)return[];this.createdComponent()},methods:{createdComponent(){this.customerPersonaRepository=this.repositoryFactory.create(this.popup.personaCustomers.entity,this.popup.personaCustomers.source),this.customerService=new S(this,this.repositoryFactory.create("customer"),this.customerPersonaRepository,Shopware.Context.api),this.customerService.reloadCustomers().then(()=>{this.refreshGridDataSource(),this.updateStateVariables()})},onAddCustomer(e,t){null!=t&&this.customerService.addCustomer(t.id,Shopware.Context.api).then(()=>{this.$refs.selectCustomerSearch.clearSelection(),this.refreshGridDataSource(),this.updateStateVariables()})},onRemoveCustomer(e){this.customerService.removeCustomer(e).then(()=>{this.refreshGridDataSource(),this.updateStateVariables()})},onRemoveSelectedCustomers(){let e=[];Object.values(this.$refs.gridCustomers.selection).forEach(t=>{e.push(this.customerService.removeCustomer(t))}),Promise.all(e).then(()=>{this.refreshGridDataSource(),this.updateStateVariables()})},onCustomerPageChange(e){this.gridCustomersPageNr=e.page,this.gridCustomersPageLimit=e.limit,this.refreshGridDataSource(),this.updateStateVariables()},onGridSelectionChanged(e,t){this.removeButtonDisabled=t<=0},refreshGridDataSource(){this.gridCustomersPageDataSource=this.customerService.getPageDataSource(this.gridCustomersPageNr,this.gridCustomersPageLimit),this.gridCustomersTotalCount>0&&this.gridCustomersPageDataSource.length<=0&&(this.gridCustomersPageNr=1===this.gridCustomersPageNr?1:this.gridCustomersPageNr-=1,this.refreshGridDataSource())},updateStateVariables(){Shopware.State.commit("alphaPopupDetail/setPersonaCustomerIdsAdd",this.customerService.getCustomerIdsToAdd()),Shopware.State.commit("alphaPopupDetail/setPersonaCustomerIdsDelete",this.customerService.getCustomerIdsToDelete())}}}),a(430);let{Component:L}=Shopware,{Criteria:I}=Shopware.Data,{mapPropertyErrors:$,mapState:R}=Shopware.Component.getComponentHelper();L.register("alpha-popup-order-condition-form",{template:'{% block alpha_popup_order_condition_form %}\n    <sw-card position-identifier="popup-order-condition-form" class="popup-order-condition-form" :title="$tc(\'alpha-popup.detail.main.preconditions.order.card\')">\n        <h4>{{ $tc(\'alpha-popup.detail.main.preconditions.order.title\') }}</h4>\n        <p>\n            {{ $tc(\'alpha-popup.detail.main.preconditions.order.text\') }}\n        </p>\n\n        {% block alpha_popup_order_condition_form_rules_field %}\n            <alpha-popup-rule-select\n                    v-if="hasPopupOrderRulesLoaded"\n                    class="alpha-popup-order-condition-form__order-rules"\n                    v-model:collection="popup.orderRules"\n                    :label="$tc(\'alpha-popup.detail.main.preconditions.order.rulesCaption\')"\n                    :placeholder="$tc(\'alpha-popup.detail.main.preconditions.order.rulesPlaceholder\')"\n                    :criteria="ruleFilter"\n                    :rule-scope="[\'checkout\']"\n                    :disabled="isEditingDisabled">\n            </alpha-popup-rule-select>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',computed:{...R("alphaPopupDetail",["popup"]),...$("popup",["tags"]),hasPopupOrderRulesLoaded(){return!!this.popup&&!!this.popup.orderRules},ruleFilter(){let e=new I;return e.addFilter(I.multi("AND",[I.equalsAny("conditions.type",["customerOrderCount","customerDaysSinceLastOrder","customerBillingCountry","customerOrderTotalAmount","customerBillingStreet","customerShippingCountry"]),I.not("AND",[I.equalsAny("conditions.type",["cartCartAmount"])])])),e},isEditingDisabled(){return!1}}}),a(838);let{Component:E}=Shopware,{Criteria:M}=Shopware.Data,{mapPropertyErrors:T,mapState:N}=Shopware.Component.getComponentHelper();E.register("alpha-popup-cart-condition-form",{template:'{% block alpha_popup_cart_condition_form %}\n    <sw-card position-identifier="popup-cart-condition-form" class="popup-cart-condition-form" :title="$tc(\'alpha-popup.detail.main.preconditions.cart.card\')">\n        <h4>{{ $tc(\'alpha-popup.detail.main.preconditions.cart.title\') }}</h4>\n        <p>\n            {{ $tc(\'alpha-popup.detail.main.preconditions.cart.text\') }}\n        </p>\n\n        {% block alpha_popup_cart_condition_form_rules_field %}\n            <alpha-popup-rule-select\n                    v-if="hasPopupCartRulesLoaded"\n                    class="alpha-popup-cart-condition-form__cart-rules"\n                    v-model:collection="popup.cartRules"\n                    :label="$tc(\'alpha-popup.detail.main.preconditions.cart.rulesCaption\')"\n                    :placeholder="$tc(\'alpha-popup.detail.main.preconditions.cart.rulesPlaceholder\')"\n                    :criteria="ruleFilter"\n                    :rule-scope="[\'cart\']"\n                    :disabled="isEditingDisabled">\n            </alpha-popup-rule-select>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',computed:{...N("alphaPopupDetail",["popup"]),...T("popup",["tags"]),hasPopupCartRulesLoaded(){return!!this.popup&&!!this.popup.cartRules},ruleFilter(){let e=new M;return e.addFilter(M.multi("AND",[M.equalsAny("conditions.type",["cartCartAmount","cartPositionPrice","cartLineItemOfType","cartLineItemTotalPrice","cartLineItemUnitPrice","cartWeight","cartVolume","cartHasDeliveryFreeItem","cartLineItemsInCartCount","cartLineItemTag","cartLineItemIsNew","cartLineItemDimensionWidth","cartLineItemDimensionHeight","cartLineItemDimensionLength","cartLineItemDimensionWeight","cartLineItemDimensionVolume","cartLineItemListPrice","cartLineItemStock","cartLineItemActualStock"])])),e},isEditingDisabled(){return!1}}});let{Component:z}=Shopware,{mapPropertyErrors:B,mapState:F}=Shopware.Component.getComponentHelper();z.register("alpha-popup-category-form",{template:'{% block alpha_popup_category_form %}\n    <sw-inherit-wrapper v-model:value="popup.categories"\n                        :has-parent="false"\n                        :inherited-value="popup.categories"\n                        is-association>\n        <template #content="{ currentValue }">\n\n            <sw-category-tree-field :categories-collection="currentValue ? currentValue : []"\n                                    class="sw-product-detail__select-category"\n                                    :disabled="false"\n                                    :placeholder="$tc(\'alpha-popup.detail.main.location.placeholderCategory\')">\n            </sw-category-tree-field>\n\n        </template>\n    </sw-inherit-wrapper>\n{% endblock %}\n',computed:{...F("alphaPopupDetail",["popup"]),...B("popup",["tags"])}});let{Component:V}=Shopware,{mapPropertyErrors:W,mapState:G}=Shopware.Component.getComponentHelper();V.register("alpha-popup-cookie-expire-time-select",{template:'{% block alpha_cookie_expire_time_select %}\n\n        <div class="alpha-cookie-expire-time-select">\n            {% block alpha_cookie_expire_time_select_field %}\n                <sw-single-select\n                    size="medium"\n                    :options="selectValues"\n                    :placeholder="$tc(\'alpha-popup.detail.main.general.cookie.cookieExpireTime\')"\n                    :label="$tc(\'alpha-popup.detail.main.general.cookie.title\')"\n                    v-model:value="popup.cookieExpireDays">\n                </sw-single-select>\n            {% endblock %}\n        </div>\n\n{% endblock %}\n',computed:{...G("alphaPopupDetail",["popup"]),...W("popup",["tags"]),selectValues(){return[{label:this.$tc("alpha-popup.detail.main.general.cookie.none"),value:0},{label:this.$tc("alpha-popup.detail.main.general.cookie.oneHour"),value:.0417},{label:this.$tc("alpha-popup.detail.main.general.cookie.sixHours"),value:.25},{label:this.$tc("alpha-popup.detail.main.general.cookie.twelveHours"),value:.5},{label:this.$tc("alpha-popup.detail.main.general.cookie.oneDay"),value:1},{label:this.$tc("alpha-popup.detail.main.general.cookie.twoDay"),value:2},{label:this.$tc("alpha-popup.detail.main.general.cookie.oneWeek"),value:7},{label:this.$tc("alpha-popup.detail.main.general.cookie.twoWeeks"),value:14},{label:this.$tc("alpha-popup.detail.main.general.cookie.oneMonth"),value:30},{label:this.$tc("alpha-popup.detail.main.general.cookie.indefinite"),value:999}]}}}),a(896);let{Component:O}=Shopware,{Criteria:U}=Shopware.Data,{mapPropertyErrors:q,mapState:H}=Shopware.Component.getComponentHelper();O.register("alpha-popup-product-form",{template:'{# <h1>test</h1> #}\n{% block alpha_popup_detail_products %}\n    <div class="alpha_popup-detail-products">\n        {% block alpha_popup_detail_product_assignment %}\n            <sw-many-to-many-assignment-card\n                    title="Auf Produkte Begrenzen"\n                    :entity-collection="popup.products"\n                    :columns="productColumns"\n                    :is-loading="isLoading"\n                    :local-mode="popup.isNew()"\n                    :criteria="productCriteria"\n                    select-label="Produkt ausw\xe4hlen"\n                    placeholder="Produkt"\n            >\n\n            </sw-many-to-many-assignment-card>\n        {% endblock %}\n        {% block alpha_popup_detail_product_steam_assignment %}\n            <sw-many-to-many-assignment-card\n                    title="Auf Dynamische Produktgruppen Begrenzen"\n                    :entity-collection="popup.productStreams"\n                    :columns="productStreamColumns"\n                    :is-loading="isLoading"\n                    :local-mode="popup.isNew()"\n                    :criteria="productStreamCriteria"\n                    select-label="Dynamische Produktgruppe ausw\xe4hlen"\n                    placeholder="Dynamische Produktgruppe"\n            >\n\n            </sw-many-to-many-assignment-card>\n        {% endblock %}\n    </div>\n{% endblock %}',inject:["repositoryFactory","acl"],mixins:["placeholder"],props:{isLoading:{type:Boolean,required:!1}},data(){return{productStreamFilter:null,productStreamInvalid:!1,manualAssignedProductsCount:0}},computed:{productStreamRepository(){return this.repositoryFactory.create("product_stream")},productColumns(){return[{property:"name",label:this.$tc("sw-category.base.products.columnNameLabel"),dataIndex:"name",routerLink:"sw.product.detail",sortable:!1}]},productStreamColumns(){return[{property:"name",label:this.$tc("sw-category.base.products.columnNameLabel"),dataIndex:"name",routerLink:"sw.product.stream.detail",sortable:!1}]},nameColumn(){return"column-name"},productCriteria(){return new U(1,10).addFilter(U.equals("parentId",null))},productStreamCriteria(){return new U(1,10)},productStreamInvalidError(){return this.productStreamInvalid?new ShopwareError({code:"PRODUCT_STREAM_INVALID",detail:this.productStreamInvalid}):null},...H("alphaPopupDetail",["popup"]),...q("product",["productAssignmentType"]),...q("popup",["tags"])},watch:{"popup.productStreamId"(e){if(!e){this.productStreamFilter=null;return}this.loadProductStreamPreview()},created(){this.createdComponent()}},method:{createdComponent(){this.popup.productStreamId&&this.loadProductStreamPreview()},loadProductStreamPreview(){this.productStreamRepository.get(this.popup.productStreamId).then(e=>{this.productStreamFilter=e.apiFilter,this.productStreamInvalid=e.invalid}).catch(()=>{this.productStreamFilter=null,this.productStreamInvalid=!0})}}});let{mapState:j,mapPropertyErrors:K}=Shopware.Component.getComponentHelper(),{Component:Z}=Shopware;Z.register("alpha-popup-time-delay-select",{template:'{% block alpha_time_dalay_select %}\n\n    <div class="alpha-time-delay-time-select">\n        {% block alpha_time_dalay_select_field %}\n            <sw-single-select\n                    size="medium"\n                    :options="selectTimeValues"\n                    placeholder="Verz\xf6gerungszeit"\n                    label="Verz\xf6gerungszeit"\n                    v-model:value="popup.delayShowTime"\n            >\n\n            </sw-single-select>\n        {% endblock %}\n    </div>\n\n{% endblock %}\n',computed:{...j("alphaPopupDetail",["popup"]),...K("popup",["tags"]),selectTimeValues(){return[{label:"1 Sekunde",value:1e3},{label:"2 Sekunden",value:2e3},{label:"3 Sekunden",value:3e3},{label:"4 Sekunden",value:4e3},{label:"5 Sekunden",value:5e3},{label:"10 Sekunden",value:1e4},{label:"15 Sekunden",value:15e3},{label:"20 Sekunden",value:2e4},{label:"30 Sekunden",value:3e4}]}}});let{mapState:J,mapPropertyErrors:Q}=Shopware.Component.getComponentHelper(),{Component:Y}=Shopware;Y.register("alpha-popup-scroll-activation",{template:'{% block alpha_scroll_percentage_select %}\n\n    <div class="alpha-scroll-percentage-select">\n        {% block alpha_scroll_percentage_select_field %}\n            <sw-single-select\n                    size="medium"\n                    :options="selectValues"\n                    placeholder="0 %"\n                    label="Popup bei Erreichen von  x % der Seite \xf6ffnen "\n                    v-model:value="popup.scrollActivationPercentage">\n            </sw-single-select>\n        {% endblock %}\n    </div>\n\n{% endblock %}\n',computed:{...J("alphaPopupDetail",["popup"]),...Q("popup",["tags"]),selectValues(){return[{label:"---",value:999},{label:"0%",value:0},{label:"25%",value:25},{label:"50%",value:50},{label:"75%",value:75},{label:"100%",value:100}]}}});let{mapState:X,mapPropertyErrors:ee}=Shopware.Component.getComponentHelper(),{Component:et,Mixin:ea}=Shopware;et.register("alpha-popup-width-select",{template:'{% block alpha_width_select %}\n    <div class="alpha-width-select">\n        {% block alpha_width_select_field %}\n            <sw-single-select\n                    size="medium"\n                    :options="selectWidthValues"\n                    placeholder="80%"\n                    :label="$tc(\'alpha-popup.detail.main.general.labelPopupWidth\')"\n                    v-model:value="popup.popupWidth">\n            </sw-single-select>\n        {% endblock %}\n\n        {% block alpha_width_select_individual_field %}\n            <sw-text-field\n                    v-if="popup.popupWidth == \'individual\'"\n                    placeholder="123px"\n                    v-model:value="popup.popupWidthIndividual">\n            </sw-text-field>\n        {% endblock %}\n\n        {% block alpha_max_width_select_field %}\n            <sw-text-field\n                    :label="$tc(\'alpha-popup.detail.main.general.labelPopupMaxWidth\')"\n                    placeholder="123px"\n                    v-model:value="popup.popupMaxWidth">\n            </sw-text-field>\n        {% endblock %}\n    </div>\n{% endblock %}\n',mixins:[ea.getByName("placeholder")],computed:{...X("alphaPopupDetail",["popup"]),...ee("popup",["tags"]),selectWidthValues(){return[{label:"Full",value:"full"},{label:"Small",value:"small"},{label:"Medium",value:"medium"},{label:"Large",value:"large"},{label:"Individual",value:"individual"}]}}});let{Component:eo}=Shopware;eo.register("alpha-popup-js-events",{template:'{% block js_event %}\n<sw-text-field\n        size="medium"\n        :label="$tc(\'alpha-popup.detail.main.general.labelJsEvents\')"\n        v-model:value="popup.jsEvents"\n        placeholder="eventName, ..."\n>\n</sw-text-field>\n{% endblock %}',props:{popup:{type:Object,required:!0}}});let{Component:en}=Shopware;en.register("alpha-popup-element-selector",{template:'{% block element_selector %}\n<sw-text-field\n        size="medium"\n        :label="$tc(\'alpha-popup.detail.main.general.labelElementSelector\')"\n        v-model:value="popup.elementSelectors"\n        placeholder="#example-selector, ..."\n>\n</sw-text-field>\n{% endblock %}',props:{popup:{type:Object,required:!0}}});let{Component:el}=Shopware;el.register("alpha-popup-detail-base",{template:'{% block alpha_popup_detail_base %}\n    <div class="alpha-popup-detail-base">\n        {% block alpha_popup_detail_base_basic_info_card %}\n            <sw-card position-identifier="alpha-popup-detail-card" :title="$tc(\'alpha-popup.detail.main.general.cardTitlePopupInfo\')" :is-loading="!$attrs.popup">\n                {% block alpha_popup_detail_base_basic_info_form %}\n                    <alpha-popup-basic-form :popup="$attrs.popup"></alpha-popup-basic-form>\n                {% endblock %}\n            </sw-card>\n        {% endblock %}\n    </div>\n{% endblock %}\n'});let{Component:ep}=Shopware;ep.register("alpha-popup-detail-condition-restrictions",{template:'{% block alpha_popup_detail_restrictions %}\n    <div class="alpha-popup-detail-restrictions">\n\n       {% block alpha_popup_detail_restrictions_publish_form %}\n           <alpha-popup-publish-select></alpha-popup-publish-select>\n       {% endblock %}\n\n        {% block alpha_popup_detail_restrictions_persona_rule_form %}\n            <alpha-popup-persona-form></alpha-popup-persona-form>\n        {% endblock %}\n        {% block alpha_popup_detail_restrictions_order_rule_form %}\n            <alpha-popup-order-condition-form></alpha-popup-order-condition-form>\n        {% endblock %}\n        {% block alpha_popup_cart_condition_form %}\n            <alpha-popup-cart-condition-form></alpha-popup-cart-condition-form>\n\n        {% endblock %}\n    </div>\n{% endblock %}\n'});let{Component:ei}=Shopware;ei.register("alpha-popup-detail-location-restrictions",{template:'{% block alpha_popup_detail_location_restrictions %}\n    <sw-card positionIdentifier="alpha-popup-detail-location-restrictions-card" class="alpha-popup-detail-location-restrictions" :title="$tc(\'alpha-popup.detail.main.location.card\')">\n        <h4>{{ $tc(\'alpha-popup.detail.main.location.title\') }}</h4>\n        <sw-container columns="1fr" gap="0px 30px">\n            {% block alpha_popup_detail_restrictions_sales_channels_form %}\n            <alpha-popup-sales-channel-select\n                class="alpha-popup-basic-form__select-sales-channels"\n                :label="$tc(\'alpha-popup.detail.main.location.labelSalesChannels\')"\n                :placeholder="$tc(\'alpha-popup.detail.main.location.placeholderSalesChannels\')">\n            </alpha-popup-sales-channel-select>\n            {% endblock %}\n            {% block alpha_popup_location_restriction_list_form %}\n                <alpha-popup-category-form\n                        class="alpha-popup-basic-form__location-restriction-list-form"\n                        :popup="$attrs.popup">\n                </alpha-popup-category-form>\n            {% endblock %}\n\n            {% block alpha_popup_detail_restrictions_active_from %}\n                <alpha-popup-active-form\n                        :popup="$attrs.popup">\n                </alpha-popup-active-form>\n\n            {% endblock %}\n\n            {% block alpha_popup_products_form %}\n                <alpha-popup-product-form\n                        class="alpha-popup-basic-form__products-form"\n                        :popup="$attrs.popup"\n                        v-if="$attrs.popup.productActive"\n                >\n\n                </alpha-popup-product-form>\n            {% endblock %}\n\n\n        </sw-container>\n    </sw-card>\n{% endblock %}\n'});var es={namespaced:!0,state(){return{popup:{},personaCustomerIdsAdd:null,personaCustomerIdsDelete:null,isLoading:!1}},mutations:{setPopup(e,t){e.popup=t},setPersonaCustomerIdsAdd(e,t){e.personaCustomerIdsAdd=t},setPersonaCustomerIdsDelete(e,t){e.personaCustomerIdsDelete=t},setIsLoading(e,t){e.isLoading=t}}},er=JSON.parse('{"alpha.popup.detail.base":{"popup":["name","validUntil"]}}');let{Component:ec,Mixin:eu}=Shopware,{Criteria:ed}=Shopware.Data,{mapPageErrors:eh}=Shopware.Component.getComponentHelper();ec.register("alpha-popup-detail",{template:'{% block alpha_popup_detail %}\n    <sw-page class="alpha-popup-detail">\n        {% block alpha_popup_detail_header %}\n            <template #smart-bar-header>\n                <h2>{{ placeholder(popup, \'name\', $tc(\'alpha-popup.detail.header.titleEdit\')) }}</h2>\n            </template>\n        {% endblock %}\n\n        {% block alpha_popup_detail_actions %}\n            <template #smart-bar-actions>\n                {% block alpha_popup_detail_actions_abort %}\n                    <sw-button :disabled="popup != null && popup.isLoading" v-tooltip.bottom="tooltipCancel" @click="onCancel">\n                        {{ $tc(\'alpha-popup.detail.header.buttonCancel\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block alpha_popup_detail_actions_save %}\n                    <sw-button-process\n                        class="alpha-popup-detail__save-action"\n                        v-model:value="isSaveSuccessful"\n                        :is-loading="isLoading"\n                        variant="primary"\n                        v-tooltip.bottom="tooltipSave"\n                        @click.prevent="onSave">\n                        {{ $tc(\'alpha-popup.detail.header.buttonSave\') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block alpha_popup_detail_language_switch %}\n            <template #language-switch>\n                <sw-language-switch\n                    :disabled="!popupId"\n                    @on-change="onChangeLanguage"\n                    :save-changes-function="saveOnLanguageChange"\n                    :abort-change-function="abortOnLanguageChange">\n                </sw-language-switch>\n            </template>\n        {% endblock %}\n\n        {% block alpha_popup_detail_content %}\n            <template #content>\n                <sw-card-view>\n                    {% block alpha_popup_detail_content_language_info %}\n                        <sw-language-info\n                            :entity-description="placeholder(popup, \'name\', $tc(\'alpha-popup.detail.header.titleCreate\'))"\n                            :is-new-entity="!popupId">\n                        </sw-language-info>\n                    {% endblock %}\n\n                    {% block alpha_popup_detail_content_tabs %}\n                        <sw-tabs position-identifier="alpha-popup-detail-page__tabs" class="alpha-popup-detail-page__tabs">\n                            {% block alpha_popup_detail_content_tabs_general %}\n                                <sw-tabs-item :route="{ name: \'alpha.popup.detail.base\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'alpha-popup.detail.tabs.tabGeneral\')"\n                                              :disabled="popupId ? false : true">\n                                    {{ $tc(\'alpha-popup.detail.tabs.tabGeneral\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {% block alpha_popup_detail_content_tabs_location_restrictions %}\n                                <sw-tabs-item :route="{ name: \'alpha.popup.detail.locations\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'alpha-popup.detail.tabs.tabLocations\')"\n                                              :disabled="popupId ? false : true">\n                                    {{ $tc(\'alpha-popup.detail.tabs.tabLocations\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {% block alpha_popup_detail_content_tabs_condition_restrictions %}\n                                <sw-tabs-item :route="{ name: \'alpha.popup.detail.conditions\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'alpha-popup.detail.tabs.tabConditions\')"\n                                              :disabled="popupId ? false : true">\n                                    {{ $tc(\'alpha-popup.detail.tabs.tabConditions\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n                        </sw-tabs>\n                    {% endblock %}\n\n                    {% block sw_product_detail_content_view %}\n                    <router-view :popup="popup"></router-view>\n                    {% endblock %}\n                </sw-card-view>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[eu.getByName("notification"),eu.getByName("placeholder"),eu.getByName("discard-detail-page-changes")("popup")],shortcuts:{"SYSTEMKEY+S":"onSave",ESCAPE:"onCancel"},props:{popupId:{type:String,required:!1,default:null}},data(){return{isSaveSuccessful:!1,saveCallbacks:[]}},metaInfo(){return{title:this.$createTitle(this.identifier)}},computed:{identifier(){return this.placeholder(this.popup,"name")},popupRepository(){return this.repositoryFactory.create("alpha_popup")},tooltipSave(){let e=this.$device.getSystemKey();return{message:`${e} + S`,appearance:"light"}},tooltipCancel(){return{message:"ESC",appearance:"light"}},popup:{get(){return Shopware.State.get("alphaPopupDetail").popup},set(e){Shopware.State.commit("alphaPopupDetail/setPopup",e)}},isLoading:{get(){return Shopware.State.get("alphaPopupDetail").isLoading},set(e){Shopware.State.commit("alphaPopupDetail/setIsLoading",e)}},personaCustomerIdsAdd(){return Shopware.State.get("alphaPopupDetail").personaCustomerIdsAdd},personaCustomerIdsDelete(){return Shopware.State.get("alphaPopupDetail").personaCustomerIdsDelete},...eh(er)},beforeCreate(){Shopware.State.registerModule("alphaPopupDetail",es)},created(){this.createdComponent()},beforeDestroy(){Shopware.State.unregisterModule("alphaPopupDetail")},watch:{popupId(){this.createdComponent()}},methods:{createdComponent(){this.isLoading=!0,this.initState(),this.$root.$on("popup-save-start",this.onShouldSave)},destroyedComponent(){this.$root.$off("popup-save-start",this.onShouldSave)},initState(){if(this.popupId)return this.loadState();this.popup=this.popupRepository.create(Shopware.Context.api),this.isLoading=!1},loadState(){return Promise.all([this.loadEntityData()])},loadEntityData(){let e=new ed(1,1);e.addAssociation("salesChannels"),e.addAssociation("cmsPage"),e.addAssociation("categories"),e.addAssociation("personaRules"),e.addAssociation("orderRules"),this.popupRepository.get(this.popupId,Shopware.Context.api,e).then(e=>{this.popup=e,Shopware.State.commit("alphaPopupDetail/setPopup",this.popup),this.isLoading=!1})},abortOnLanguageChange(){if(this.popupRepository.hasChanges(this.popup))return!0;if(null!==this.discounts){let e=this.repositoryFactory.create(this.discounts.entity,this.discounts.source);return this.discounts.some(t=>t.isNew()||e.hasChanges(t))}return!1},saveOnLanguageChange(){return this.onSave()},onChangeLanguage(){this.loadEntityData()},onSave(){return(this.isLoading=!0,this.popupId)?this.savePopup():this.createPopup()},onShouldSave(){this.onSave().then(()=>{this.$root.$emit("popup-save-success")}).catch(()=>{this.$root.$emit("popup-save-error")})},createPopup(){return this.savePopup().then(()=>{this.$router.push({name:"alpha.popup.detail",params:{id:this.popup.id}})})},async savePopup(){return this.savePopupAssociations().then(()=>this.popupRepository.save(this.popup,Shopware.Context.api).then(()=>{this.isSaveSuccessful=!0;let e=new ed(1,1);return e.addAssociation("salesChannels"),e.addAssociation("categories"),this.popupRepository.get(this.popup.id,Shopware.Context.api,e).then(e=>{this.popup=e,this.isLoading=!1})}).catch(e=>{throw this.isLoading=!1,this.createNotificationError({title:this.$tc("global.default.error"),message:this.$tc("global.notification.notificationSaveErrorMessage",0,{entityName:this.popup.name})}),e}))},async savePopupAssociations(){let e=this.repositoryFactory.create(this.popup.personaCustomers.entity,this.popup.personaCustomers.source);null!==this.personaCustomerIdsDelete&&await this.personaCustomerIdsDelete.forEach(t=>{e.delete(t,Shopware.Context.api)}),null!==this.personaCustomerIdsAdd&&await this.personaCustomerIdsAdd.forEach(t=>{e.assign(t,Shopware.Context.api)}),Shopware.State.commit("alphaPopupDetail/setPersonaCustomerIdsAdd",[]),Shopware.State.commit("alphaPopupDetail/setPersonaCustomerIdsDelete",[])},onCancel(){this.$router.push({name:"alpha.popup.overview"})}}}),a(66);let{Component:em,Mixin:eg,Filter:eb}=Shopware,{Criteria:e_}=Shopware.Data;em.register("alpha-popup-list",{template:'{% block alpha_popup_list %}\n    <sw-page class="alpha-popup-list">\n\n        {% block sw_order_list_search_bar %}\n            <template #search-bar>\n                <sw-search-bar initial-search-type="popup"\n                               :placeholder="$tc(\'alpha-popup.list.placeholderSearchBar\')"\n                               :initial-search="term"\n                               @search="onSearch">\n                </sw-search-bar>\n            </template>\n        {% endblock %}\n\n        {% block alpha_popup_list_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block alpha_popup_list_smart_bar_header_title %}\n                    <h2>\n                        {% block alpha_popup_list_smart_bar_header_title_text %}\n                            {{ $tc(\'alpha-popup.list.textTitle\') }}\n                        {% endblock %}\n\n                        {% block alpha_popup_list_smart_bar_header_amount %}\n                            <span v-if="!isLoading" class="sw-page__smart-bar-amount">\n                            ({{ total }})\n                            </span>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block alpha_popup_list_smart_bar_actions %}\n            <template #smart-bar-actions>\n                {% block alpha_popup_list_smart_bar_actions_add %}\n                    <sw-button :router-link="{ name: \'alpha.popup.create\' }" variant="primary">\n                        {{ $tc(\'alpha-popup.list.buttonAddPopup\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block alpha_popup_list_language_switch %}\n            <sw-language-switch #language-switch @on-change="onChangeLanguage"></sw-language-switch>\n        {% endblock %}\n\n        <template #content>\n            {% block alpha_popup_list_content %}\n                <div class="alpha-popup-list__content">\n                    {% block alpha_popup_list_grid %}\n                        <sw-entity-listing :repository="popupRepository"\n                                           :columns="popupColumns"\n                                           :items="popups"\n                                           detail-route="alpha.popup.detail"\n                                           :is-loading="isLoading"\n                                           allow-inline-edit\n                                           allow-column-edit\n                                           full-page>\n\n                            {% block alpha_popup_list_grid_columns %}\n                                {% block alpha_popup_list_grid_columns_active %}\n                                    <template #column-active="{ item }">\n                                        <sw-icon\n                                                v-if="item.active"\n                                                name="regular-checkmark-xs"\n                                                small\n                                                class="is--active"\n                                        />\n                                        <sw-icon\n                                                v-else\n                                                name="regular-times-s"\n                                                small\n                                                class="is--inactive"\n                                        />\n                                    </template>\n                                {% endblock %}\n\n                                {% block alpha_popup_list_grid_columns_valid_from %}\n                                    <template #column-validFrom="{ item }">\n                                        {{ dateFilter(item.validFrom, { hour: \'2-digit\', minute: \'2-digit\' }) }}\n                                    </template>\n                                {% endblock %}\n\n                                {% block alpha_popup_list_grid_columns_valid_until %}\n                                    <template #column-validUntil="{ item }">\n                                        {{ dateFilter(item.validUntil, { hour: \'2-digit\', minute: \'2-digit\' }) }}\n                                    </template>\n                                {% endblock %}\n                            {% endblock %}\n\n                            <template #delete-action="{ item, showDelete }">\n                                <sw-context-menu-item @click="showDelete(item.id)" :disabled="item.hasOrders" variant="danger">\n                                    {{ $tc(\'global.default.delete\') }}\n                                </sw-context-menu-item>\n                            </template>\n\n                        </sw-entity-listing>\n                    {% endblock %}\n\n                    {% block alpha_popup_list_empty_state %}\n                        <sw-empty-state v-if="!isLoading && !total" :title="$tc(\'alpha-popup.list.messageEmpty\')"></sw-empty-state>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n        </template>\n\n        {% block alpha_popup_list_sidebar %}\n            <sw-sidebar #sidebar>\n                {% block alpha_popup_list_sidebar_refresh %}\n                    <sw-sidebar-item\n                            icon="regular-undo"\n                            :title="$tc(\'alpha-popup.list.titleSidebarItemRefresh\')"\n                            @click="onRefresh">\n                    </sw-sidebar-item>\n                {% endblock %}\n            </sw-sidebar>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[eg.getByName("listing")],data(){return{popups:null,showDeleteModal:!1,sortBy:"name",isLoading:!0}},metaInfo(){return{title:this.$createTitle()}},computed:{popupRepository(){return this.repositoryFactory.create("alpha_popup")},popupColumns(){return this.getPopupColumns()},dateFilter(){return eb.getByName("date")}},methods:{getList(){this.isLoading=!0;let e=new e_(this.page,this.limit);return e.addAssociation("cmsPage"),e.setTerm(this.term),e.addSorting(e_.sort(this.sortBy,this.sortDirection)),this.popupRepository.search(e,Shopware.Context.api).then(e=>(this.total=e.total,this.popups=e,this.isLoading=!1,this.popups))},onChangeLanguage(){this.getList()},getPopupColumns(){return[{property:"name",label:this.$tc("alpha-popup.list.columnName"),routerLink:"alpha.popup.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"active",label:this.$tc("alpha-popup.list.columnActive"),inlineEdit:"boolean",allowResize:!0,align:"center"},{property:"cmsPage.name",label:this.$tc("alpha-popup.list.cmsPageLayoutName"),inlineEdit:!1,allowResize:!0,align:"center"},{property:"validFrom",label:this.$tc("alpha-popup.list.columnValidFrom"),inlineEdit:"date",allowResize:!0,align:"center"},{property:"validUntil",label:this.$tc("alpha-popup.list.columnValidUntil"),inlineEdit:"date",allowResize:!0,align:"center"}]}}}),Shopware.Module.register("alpha-popup",{type:"plugin",name:"Popup",title:"alpha-popup.general.mainMenuItemGeneral",description:"alpha-popup.general.description",color:"#62ff80",icon:"regular-list-xs",entity:"alpha_popup",snippets:{"de-DE":e,"en-GB":t},routes:{overview:{component:"alpha-popup-list",path:"overview"},create:{component:"alpha-popup-detail",path:"create",redirect:{name:"alpha.popup.create.base"},children:{base:{component:"alpha-popup-detail-base",path:"base",meta:{parentPath:"alpha.popup.overview"}}}},detail:{component:"alpha-popup-detail",path:"detail/:id?",redirect:{name:"alpha.popup.detail.base"},children:{base:{component:"alpha-popup-detail-base",path:"base",meta:{parentPath:"alpha.popup.overview"}},locations:{component:"alpha-popup-detail-location-restrictions",path:"locations",meta:{parentPath:"alpha.popup.overview"}},conditions:{component:"alpha-popup-detail-condition-restrictions",path:"conditions",meta:{parentPath:"alpha.popup.overview"}}},props:{default:e=>({popupId:e.params.id})}}},navigation:[{path:"alpha.popup.overview",label:"alpha-popup.general.mainMenuItemGeneral",color:"#62ff80",icon:"regular-list-xs",position:120,parent:"sw-marketing"}]}),a(927),Shopware.Component.override("sw-cms-sidebar",{template:"\n\n{% block sw_cms_sidebar_page_settings_type_field_options %}\n    {% parent %}\n    <option value=\"alpha_popup\">\n        {{ $tc('alpha-popup.detail.main.general.cms.pageTypePopupLabel') }}\n    </option>\n{% endblock %}\n"}),a(17),Shopware.Component.override("sw-cms-create-wizard",{template:'{% block sw_cms_create_wizard_page_type_options %}\n    {% parent %}\n\n    <div class="sw-cms-create-wizard__page-type" @click="onPageTypeSelect(\'alpha_popup\')">\n        <sw-icon name="regular-gift" size="24"/>\n        <p>{{ $tc(\'alpha-popup.detail.main.general.cms.pageTypePopupLabel\') }}</p>\n    </div>\n{% endblock %}'})}()}();